package rs.ac.bg.fon.ai.forme;

import java.util.ArrayList;
import java.util.List;

import rs.ac.bg.fon.ai.domen.Clanarina;
import rs.ac.bg.fon.ai.domen.Grad;
import rs.ac.bg.fon.ai.domen.Polaznik;
import rs.ac.bg.fon.ai.domen.Sala;
import rs.ac.bg.fon.ai.domen.Trener;
import rs.ac.bg.fon.ai.domen.Trening;
import rs.ac.bg.fon.ai.domen.VrstaVezbe;
import rs.ac.bg.fon.ai.komunikacija.KomunikacijaSaServerom;
import rs.ac.bg.fon.ai.model.ModelTabeleTreniranje;
import rs.ac.bg.fon.ai.transkript.KlijentskiZahtev;
import rs.ac.bg.fon.ai.transkript.Operacije;
import rs.ac.bg.fon.ai.transkript.ServerskiOdgovor;

public class FrmNapraviTrening extends javax.swing.JDialog {

    Trener ulogovan;
    FrmKlijent fk;

    /**
     * Creates new form FrmNapraviTrening
     */
    public FrmNapraviTrening(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    FrmNapraviTrening(FrmKlijent aThis, boolean b, Trener ulogovan) {
        initComponents();
        setLocationRelativeTo(null);

        this.ulogovan = ulogovan;
        fk = aThis;
        prepareCbPolaznik();
        prepareCbClanarine();

        prepareCBVrsteVezbe();
        prepareCBSala();
        prepareCBGrad();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        cbPolaznik = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbVrstaVezbe = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbGrad = new javax.swing.JComboBox<>();
        cbClanarina = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbSala = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btNapravi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Polaznik");

        jLabel3.setText(" VrstaVezbe");

       // cbVrstaVezbe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vezbe_istezanja", "Vezbe_zagrevanja", "trcanje", "full_program" }));

        jLabel4.setText("Grad");

       // cbGrad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KRAGUJEVAC", "BEOGRAD", "NOVI_SAD", "NIS" }));

        jLabel5.setText("Clanarina");

       /// cbSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SALA1", "SALA2", "SALA3" }));

        jLabel6.setText("Sala");

        btNapravi.setText("Napravi");
        btNapravi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNapraviActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btNapravi)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel2))
                                .addComponent(jLabel3))
                            .addGap(63, 63, 63)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbVrstaVezbe, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbClanarina, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbSala, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cbPolaznik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cbVrstaVezbe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbClanarina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(cbSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btNapravi)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btNapraviActionPerformed(java.awt.event.ActionEvent evt) {                                          

        Polaznik p = (Polaznik) cbPolaznik.getSelectedItem();
        String vrsta = (String) cbVrstaVezbe.getSelectedItem();
        VrstaVezbe v = VrstaVezbe.valueOf(vrsta);

        String grad = (String) cbGrad.getSelectedItem();
        Grad g = Grad.valueOf(grad);

        Clanarina c = (Clanarina) cbClanarina.getSelectedItem();

        String sala = (String) cbSala.getSelectedItem();
        Sala s = Sala.valueOf(sala);

        Trening t = new Trening(-1, ulogovan, p, v, g, c, s);

        ModelTabeleTreniranje mt = (ModelTabeleTreniranje) fk.getTblTrening().getModel();
        mt.dodajTrening(t);
        mt.fireTableDataChanged();
        this.dispose();

        // TODO add your handling code here:
    }                                         

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private javax.swing.JButton btNapravi;
    private javax.swing.JComboBox<Object> cbClanarina;
    private javax.swing.JComboBox<Object> cbGrad;
    private javax.swing.JComboBox<Object> cbPolaznik;
    private javax.swing.JComboBox<Object> cbSala;
    private javax.swing.JComboBox<Object> cbVrstaVezbe;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration                   

    private void prepareCbPolaznik() {

        cbPolaznik.removeAllItems();

        List<Polaznik> listp = new ArrayList<>();

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_POLAZNIKE);

       KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);

        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
        listp = (List<Polaznik>) so.getOdgovor();

        if (listp == null || listp.size() == 0) {
            System.out.println("lista polaznika je prazna");
        }

        for (Polaznik p : listp) {
            cbPolaznik.addItem(p);
        }

    }

    private void prepareCbClanarine() {
        cbClanarina.removeAllItems();

        List<Clanarina> listp = new ArrayList<>();

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.VRATI_CLANARINE);

        KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);

        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
        listp = (List<Clanarina>) so.getOdgovor();

        if (listp == null || listp.size() == 0) {
            System.out.println("lista clanarina je prazna");
        }

        for (Clanarina p : listp) {
            cbClanarina.addItem(p);
        }
    }

    private void prepareCBVrsteVezbe() {
        //"Vezbe_istezanja", "Vezbe_zagrevanja", "trcanje", "full_program"
        String s1 = "Vezbe_istezanja";
        String s2 = "Vezbe_zagrevanja";

        String s3 = "trcanje";
        String s4 = "full_program";

        cbVrstaVezbe.addItem(s1);
        cbVrstaVezbe.addItem(s2);

        cbVrstaVezbe.addItem(s3);

        cbVrstaVezbe.addItem(s4);

    }

    private void prepareCBSala() {
  //"SALA1", "SALA2", "SALA3"
     String s1 = "SALA1";
        String s2 = "SALA2";

        String s3 = "SALA3";
       
        cbSala.addItem(s1);
        cbSala.addItem(s2);

        cbSala.addItem(s3);
    
    }

    private void prepareCBGrad() {
   //"KRAGUJEVAC", "BEOGRAD", "NOVI_SAD", "NIS"
     String s1 = "KRAGUJEVAC";
        String s2 = "BEOGRAD";

        String s3 = "NOVI_SAD";
        String s4 = "NIS";

        cbGrad.addItem(s1);
        cbGrad.addItem(s2);

        cbGrad.addItem(s3);

        cbGrad.addItem(s4);
    
    }
}
